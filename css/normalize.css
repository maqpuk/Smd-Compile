/*!normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css*/

html {
    line-height: 1.15;
    text-size-adjust: 100%
}

body {
    margin: 0
}

main {
    display: block
}

h1 {
    margin: .67em 0;
    font-size: 2em
}

hr {
    box-sizing: content-box;
    height: 0;
    overflow: visible
}

pre {
    font-size: 1em;
    font-family: monospace, monospace
}

a {
    background-color: transparent
}

abbr[title] {
    text-decoration: underline;
    text-decoration: underline dotted currentColor;
    border-bottom: none
}

b,
strong {
    font-weight: bolder
}

code,
kbd,
samp {
    font-size: 1em;
    font-family: monospace, monospace
}

small {
    font-size: 80%
}

sub,
sup {
    position: relative;
    font-size: 75%;
    line-height: 0;
    vertical-align: baseline
}

sub {
    bottom: -.25em
}

sup {
    top: -.5em
}

img {
    border-style: none
}

button,
input,
optgroup,
select,
textarea {
    margin: 0;
    font-size: 100%;
    font-family: inherit;
    line-height: 1.15
}

button,
input {
    overflow: visible
}

button,
select {
    text-transform: none
}

button,
[type=button],
[type=reset],
[type=submit] {
    appearance: button
}

button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
    padding: 0;
    border-style: none
}

button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
    outline: 1px dotted ButtonText
}

fieldset {
    padding: .35em .75em .625em
}

legend {
    display: table;
    box-sizing: border-box;
    max-width: 100%;
    padding: 0;
    color: inherit;
    white-space: normal
}

progress {
    vertical-align: baseline
}

textarea {
    overflow: auto
}

[type=checkbox],
[type=radio] {
    box-sizing: border-box;
    padding: 0
}

[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
    height: auto
}

[type=search] {
    outline-offset: -2px;
    appearance: textfield
}

[type=search]::-webkit-search-decoration {
    appearance: none
}

::-webkit-file-upload-button {
    font: inherit;
    appearance: button
}

details {
    display: block
}

summary {
    display: list-item
}

template {
    display: none
}

[hidden] {
    display: none
}

@keyframes spinner {
    to {
        transform: rotate(360deg)
    }
}

@keyframes keyframe-stripes {
    0% {
        background-position-x: 1em
    }
}

@keyframes support-placeholder-animate {
    0% {
        background-position: -600px 0
    }
    to {
        background-position: 600px 0
    }
}

@keyframes keyframe-dots {
    0%,
    20% {
        color: #0000;
        text-shadow: .25em 0 0 transparent, .5em 0 0 transparent
    }
    40% {
        color: #fff;
        text-shadow: .25em 0 0 transparent, .5em 0 0 transparent
    }
    60% {
        text-shadow: .25em 0 0 #fff, .5em 0 0 transparent
    }
    80%,
    to {
        text-shadow: .25em 0 0 #fff, .5em 0 0 #fff
    }
}

:root {
    --mainColor: #eee;
    --secondaryColor: #d8d8e2;
    --mainBgColor: #17171e;
    --mainBgColorRGB: 23 23 30;
    --navColor: #1c1c26;
    --borderColor: #262633;
    --purpleColorRGB: 102 93 195;
    --purpleColor: rgb(var(--purpleColorRGB));
    --redColor: #ff424d;
    --redColorRGB: 255 81 87;
    --greenColor: #00ff8e;
    --vh: 1vh;
    --bodyHeight: calc(var(--vh, 1vh) * 100);
    --burger-size: 5rem;
    --nav-width: 100%
}

@media(min-width:40em) {
     :root {
        --nav-width: 5rem
    }
}

.pages {
    --stickyHeight: 5rem;
    height: 100vh
}

.pages .page {
    --padding: 5vw;
    display: flex;
    flex-direction: column;
    padding: var(--padding);
    padding-top: 5rem;
    border-bottom: solid 1px #262633;
    border-bottom: solid 1px var(--borderColor)
}

.pages .page:not(.centered) p,
.pages .page:not(.centered) div.p {
    padding-left: 2rem;
    border-left: 3px solid #665dc3;
    border-left: 3px solid var(--purpleColor)
}

.pages .page:not(.centered) p h2,
.pages .page:not(.centered) div.p h2 {
    font-size: calc(2rem + 1vw)
}

.pages .page:not(.centered) p p,
.pages .page:not(.centered) div.p p,
.pages .page:not(.centered) p div.p,
.pages .page:not(.centered) div.p div.p {
    padding-left: 2rem;
    border-left: 3px solid #665dc3;
    border-left: 3px solid var(--purpleColor)
}

.pages .page:not(.centered) p a,
.pages .page:not(.centered) div.p a {
    border-bottom: 2px dashed #665dc3;
    border-bottom: 2px dashed var(--purpleColor)
}

.pages .page.centered {
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    min-height: var(--bodyHeight);
    text-align: center
}

.pages .page.centered p.status {
    position: fixed;
    bottom: 0
}

.pages .page.centered button.upload {
    margin-top: 2rem
}

.pages .page.centered h3 {
    max-width: 40em
}

.pages .page h1,
.pages .page h2,
.pages .page h3 {
    margin: .5rem 0
}

.pages .page img {
    max-width: 100vw;
    padding: 2rem 0
}

.top-menu {
    display: block;
    width: 100%;
    height: var(--stickyHeight)
}

.top-menu.sticky>menu {
    position: fixed;
    top: 0;
    right: 0;
    left: 0
}

.top-menu menu {
    --stickyFontSize: .9rem;
    display: flex;
    justify-content: center;
    height: var(--stickyHeight);
    margin: 0;
    padding: 0;
    list-style: none;
    background-color: #17171e;
    background-color: var(--mainBgColor)
}

.top-menu menu a {
    display: flex;
    align-items: center;
    height: 100%;
    padding: 0 1rem;
    font-weight: 600;
    font-size: var(--stickyFontSize);
    text-transform: uppercase
}

#app.with-menu .pages .top-menu.sticky menu {
    left: 100%;
    left: var(--nav-width)
}

.pages .alert {
    position: fixed;
    bottom: 0;
    width: 100%;
    min-height: 1.5rem;
    padding: 1rem;
    color: #ff424d;
    color: var(--redColor);
    font-size: 1rem;
    background-color: #17171e;
    background-color: var(--mainBgColor)
}

.pages .alert a {
    color: #d8d8e2;
    color: var(--secondaryColor);
    text-decoration: underline
}

.pages>.page.info {
    padding-bottom: 2rem
}

.pages>.page.info p,
.pages>.page.info div.p {
    margin-bottom: 2rem;
    padding: 1rem;
    background-color: #1f1f28
}

@media(min-width:40em) {
    .pages>.page.info p,
    .pages>.page.info div.p {
        padding: 1rem 2rem
    }
}

.pages>.page.info h4 {
    display: flex;
    align-items: center;
    margin: 0;
    font-weight: 300;
    font-size: 1.5rem
}

.pages>.page.info h4 svg {
    margin-right: 1rem
}

.pages>.page.info .content {
    padding-left: 2rem;
    border-left: 3px solid #665dc3;
    border-left: 3px solid var(--purpleColor)
}

.pages>.page.info .powered {
    font-size: .9rem;
    font-weight: 100;
    letter-spacing: .05rem;
    text-transform: uppercase;
    color: #d8d8e2;
    text-align: center;
    flex: 1;
    display: flex;
    align-items: end;
    justify-content: center;
    line-height: 1.75rem
}

html[lang=ar] .pages>.page.info,
html[lang=he] .pages>.page.info {
    direction: rtl!important
}

button {
    --color: 238 238 238;
    --bg-color: 38 38 51;
    --padding-block: .4rem;
    --padding-inline: 1.5rem;
    --border-width: 0px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-sizing: content-box;
    padding: calc(var(--padding-block) - var(--border-width)) calc(var(--padding-inline) - var(--border-width));
    color: rgba(var(--color)/100%);
    font-size: 1rem;
    line-height: 2rem;
    white-space: nowrap;
    background-color: rgba(var(--bg-color)/100%);
    border-color: rgb(var(--bg-color));
    border-style: solid;
    border-width: var(--border-width);
    border-radius: 2rem;
    cursor: pointer;
    user-select: none
}

button:disabled {
    cursor: not-allowed;
    filter: brightness(75%)
}

button:enabled:hover {
    background-color: rgba(var(--bg-color)/70%);
    transition: color .2s, background-color .2s
}

button svg {
    min-height: 1.8em
}

button.upload {
    --border-width: 2px;
    color: #eee;
    color: var(--mainColor);
    background-color: transparent;
    border-color: #665dc3;
    border-color: var(--purpleColor)
}

button.upload:enabled:hover,
button.upload:enabled:focus {
    background-color: transparent
}

button.upload:enabled:hover:not(.process),
button.upload:enabled:focus:not(.process) {
    background: rgba(102, 93, 195, .25);
    background: rgba(var(--purpleColorRGB)/25%)
}

button.upload.process {
    background-image: linear-gradient(45deg, rgba(102, 93, 195, .25) 25%, transparent 25%, transparent 50%, rgba(102, 93, 195, .25) 50%, rgba(102, 93, 195, .25) 75%, transparent 75%, transparent);
    background-image: linear-gradient(45deg, rgb(var(--purpleColorRGB)/25%) 25%, transparent 25%, transparent 50%, rgb(var(--purpleColorRGB)/25%) 50%, rgb(var(--purpleColorRGB)/25%) 75%, transparent 75%, transparent);
    background-size: 1rem 1rem;
    animation: keyframe-stripes 1s linear infinite;
    pointer-events: none
}

button.outline {
    --border-width: 2px;
    background-color: transparent
}

button.outline:hover {
    color: rgb(var(--color)/70%);
    background-color: transparent
}

button.link {
    background-color: transparent
}

button.link:enabled:hover {
    color: rgb(var(--color)/70%);
    background-color: transparent
}

button.red {
    --color: 255 255 255;
    --bg-color: var(--redColorRGB)
}

button.white {
    --color: var(--mainBgColorRGB);
    --bg-color: 211 211 223
}

button.rec {
    position: relative;
    width: 3rem;
    height: 3rem;
    padding: 0;
    text-indent: -9999px;
    background-color: #17171e;
    background-color: var(--mainBgColor);
    background-clip: content-box;
    border: solid 2px #eee;
    border: solid 2px var(--mainColor);
    border-radius: 5rem;
    border-radius: 50%
}

button.rec:before {
    position: absolute;
    display: block;
    width: 100%;
    height: 100%;
    background-color: #ff424d;
    background-color: var(--redColor);
    border-color: #eee;
    border-color: var(--mainColor);
    border-radius: 50%;
    transform: scale(.85);
    transition: transform .1s;
    content: ""
}

button.rec.active:before {
    border-radius: 20%;
    transform: scale(.4);
    transition: transform .1s, border-radius .2s
}

button.rec:not(.active):enabled:hover:before {
    transform: scale(.9)
}

.progress-bar {
    width: 100%;
    height: .5rem;
    overflow: hidden;
    background-color: #eee;
    background-color: var(--mainColor);
    border-radius: 3px
}

.progress-bar .value {
    width: 0%;
    height: 100%;
    background-color: #665dc3;
    background-color: var(--purpleColor)
}

.progress-bar.stripes {
    background-image: linear-gradient(45deg, rgb(102 93 195 .25) 25%, transparent 25%, transparent 50%, rgb(102 93 195 .25) 50%, rgb(102 93 195 .25) 75%, transparent 75%, transparent);
    background-image: linear-gradient(45deg, rgb(var(--purpleColorRGB) .25) 25%, transparent 25%, transparent 50%, rgb(var(--purpleColorRGB) .25) 50%, rgb(var(--purpleColorRGB) .25) 75%, transparent 75%, transparent);
    background-size: 1em 1em;
    animation: keyframe-stripes 1s linear infinite
}

.progress-bar-dots:after {
    animation: keyframe-dots 2s steps(1) infinite;
    content: "."
}

.spinner {
    width: 0;
    height: 0;
    overflow: hidden
}

.spinner:before {
    position: absolute;
    box-sizing: border-box;
    width: 4rem;
    height: 4rem;
    margin-top: -2rem;
    margin-left: -2rem;
    border: 3px solid #262633;
    border: 3px solid var(--borderColor);
    border-top-color: #665dc3;
    border-top-color: var(--purpleColor);
    border-radius: 50%;
    animation: spinner .8s ease infinite;
    content: ""
}

.input-select-container {
    position: relative;
    display: flex
}

.input-select-container button.shift {
    padding-left: var(--paddingBlock);
    padding-right: var(--paddingBlock)
}

.input-select-container button.shift:not(.next) {
    margin-right: 2px
}

.input-select-container button.shift.next {
    margin-left: 2px
}

.input-select-container button.shift.next svg {
    transform: rotate(180deg)
}

.input-select-container .options {
    position: absolute;
    right: 0;
    bottom: calc(100% + .3em);
    left: 0;
    z-index: 1;
    overflow-y: auto;
    color: #eee;
    color: var(--mainColor);
    background-color: #1e1e28;
    border: solid 1px #262633;
    border: solid 1px var(--borderColor);
    border-radius: 4px;
    visibility: hidden
}

.input-select-container .options .option {
    padding: .7rem 1rem;
    overflow: hidden;
    font-size: .9rem;
    white-space: nowrap;
    text-align: left;
    text-overflow: ellipsis;
    cursor: pointer
}

.input-select-container .options .option:focus,
.input-select-container .options .option:hover {
    background-color: #17171e;
    background-color: var(--mainBgColor)
}

.input-select-container.open .options {
    visibility: visible
}

.input-select-container .options .option.selected svg {
    position: absolute;
    left: 1em;
    color: #00ff8e;
    color: var(--greenColor)
}

.modal {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 8;
    display: flex;
    color: #000;
    background: #17171e;
    background: var(--mainBgColor)
}

@media(min-width:64em) {
    .modal {
        right: 0;
        left: 0
    }
}

.modal .inner {
    position: relative;
    z-index: 11;
    min-width: 40%;
    margin: auto;
    padding: 2rem;
    text-align: center
}

@media(min-width:64em) {
    .modal .inner {
        padding: 2.7rem
    }
}

.modal .inner h2 {
    color: #fff
}

.modal .inner>*:not(last-child) {
    margin-bottom: 1rem
}

.modal .cancel {
    position: absolute;
    top: 1rem;
    right: 0
}

.modal footer {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    padding-top: 2rem
}

.modal footer>* {
    margin: 0 .25rem
}

@media(min-width:40em) {
    #app.with-menu~.modal {
        left: 100%;
        left: var(--nav-width)
    }
}

.fxlist {
    --fx-main-color: #9e9fa5;
    display: flex;
    flex-direction: row;
    padding-bottom: 1rem;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth
}

.fxlist>.fxitem {
    display: flex;
    flex-shrink: 0;
    justify-content: center;
    width: 100%;
    scroll-snap-align: start
}

@media(min-width:40em) {
    .fxlist>.fxitem {
        width: auto
    }
}

.fxlist>.fxitem:not(:first-child) {
    margin-left: 1rem
}

.fxlist .fx {
    display: flex;
    flex-direction: column;
    min-width: 17rem;
    height: 100%;
    color: var(--fx-main-color);
    background-color: #1c1c26;
    background-color: var(--navColor);
    border-radius: 2px;
    user-select: none
}

.fxlist .fx .header {
    display: flex;
    flex-direction: row;
    align-items: center;
    height: 3rem;
    border-bottom: solid 1px #17171e;
    border-bottom: solid 1px var(--mainBgColor)
}

.fxlist .fx .header button.power {
    padding: .4rem 1rem;
    color: #04cc73;
    background-color: transparent;
    border-right: solid 1px #17171e;
    border-right: solid 1px var(--mainBgColor);
    border-radius: 0;
    padding-top: 0;
    padding-bottom: 0
}

.fxlist .fx .header span {
    margin-left: 1rem
}

.fxlist .fx .body {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
    padding: .75rem 1rem
}

.fxlist .fx .bigval {
    display: flex;
    flex: 1;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    font-weight: 100;
    font-size: 2rem
}

.fxlist .fx .bigval span {
    color: #ffffff80;
    font-size: 1rem
}

.fxlist .fx .labels {
    display: flex;
    flex-direction: row;
    justify-content: space-between
}

.fxlist .fx .labels>* {
    white-space: nowrap;
    text-align: center
}

.fxlist .fx .vertical-ranges {
    display: flex;
    justify-content: space-around;
    margin: .5rem 0
}

.fxlist .fx .vertical-ranges .item {
    display: flex;
    flex: 1;
    flex-direction: column;
    align-items: center
}

.fxlist .fx .vertical-ranges .item .label {
    margin: .5rem 0
}

.fxlist .fx.disabled .body {
    opacity: .5;
    filter: blur(1px);
    pointer-events: none
}

.fxlist .fx.disabled .header button.power {
    color: var(--fx-main-color)
}

.fxlist .fx .input-select-container {
    --bg-color: var(--mainBgColor);
    --borderWidth: 0
}

.fxlist .fx .input-select-container button {
    padding: 0;
    font-size: 1rem;
    background-color: #2a2a36;
    border-radius: 0
}

@media(min-width:40em) {
    .fxlist .fx .input-select-container button {
        font-size: .9rem
    }
}

.fxlist .fx .input-select-container button:not(.shift) {
    flex: 1
}

.fxlist .fx .input-select-container button.shift {
    padding: 0 .75rem
}

.fxlist .fx .input-select-container button.main>.text {
    padding: 0 1rem
}

.fxlist .input-range .track {
    background-color: #2a2a36
}

.page-player {
    display: grid;
    grid-gap: 1rem 0;
    grid-template: ". cancel" 5rem "wave wave" auto "effects effects" auto "play play" auto "action action" min-content "line line" min-content "encode encode" min-content/auto 5rem;
    grid-template: ". cancel" var(--burger-size) "wave wave" auto "effects effects" auto "play play" auto "action action" min-content "line line" min-content "encode encode" min-content/auto var(--burger-size);
    padding: 0 0 1rem
}

@media(min-width:40em) {
    .page-player {
        grid-template: ". . . cancel" 5rem "wave wave wave wave" auto "effects effects effects effects" auto "line line line line" min-content "play action encode encode" min-content/13rem minmax(0, 1fr) 12rem 5rem;
        grid-template: ". . . cancel" var(--burger-size) "wave wave wave wave" auto "effects effects effects effects" auto "line line line line" min-content "play action encode encode" min-content/13rem minmax(0, 1fr) 12rem var(--burger-size);
        padding: 0 2rem 1rem
    }
}

.page-player .player-cancel {
    grid-area: cancel;
    align-self: center;
    justify-self: center
}

@media(min-width:40em) {
    .page-player .player-cancel {
        margin-left: 4rem
    }
}

.page-player .player-waveform {
    grid-area: wave;
    align-self: end;
    max-width: 100vw
}

.page-player .player-effects {
    display: grid;
    grid-area: effects;
    align-self: start;
    padding: 0 1rem
}

.page-player .player-line {
    grid-area: line;
    border-top: solid 1px #262633;
    border-top: solid 1px var(--borderColor)
}

.page-player .player-play {
    display: grid;
    grid-area: play;
    grid-gap: 1rem;
    grid-template-areas: "backward play forward";
    grid-template-columns: min-content min-content min-content;
    align-self: center;
    justify-content: center
}

@media(max-width:39.9375em) {
    .page-player .player-play button {
        font-size: 2em;
        background-color: transparent
    }
}

@media(min-width:40em) {
    .page-player .player-play {
        grid-template-areas: "play playback";
        grid-template-columns: 1fr min-content;
        align-self: inherit
    }
}

.page-player .player-play .backward {
    grid-area: backward
}

@media(min-width:40em) {
    .page-player .player-play .backward {
        display: none
    }
}

.page-player .player-play .forward {
    grid-area: forward
}

@media(min-width:40em) {
    .page-player .player-play .forward {
        display: none
    }
}

.page-player .player-play .playback {
    display: none;
    grid-area: playback
}

@media(min-width:40em) {
    .page-player .player-play .playback {
        display: inherit
    }
}

.page-player .player-play .play {
    grid-area: play
}

.page-player .player-encode {
    display: grid;
    grid-area: encode;
    grid-gap: .5rem;
    grid-template-columns: 1fr 1fr;
    padding: 0 1rem
}

@media(min-width:40em) {
    .page-player .player-encode {
        padding: 0
    }
}

.page-player .player-action {
    display: flex;
    grid-area: action;
    justify-self: center
}

.page-player .player-action .title {
    display: flex;
    align-items: center;
    margin: .5rem;
    color: #ffffff80;
    font-size: .8rem
}

.recorder {
    padding: 0 0 2rem!important
}

.recorder {
    display: grid;
    grid-gap: 2rem;
    grid-template: ". . . . setting" 5rem "title title title title title" min-content "wave wave wave wave wave" min-content "prompt prompt prompt prompt prompt" 1fr "play play rec cancel cancel" min-content/5rem 1fr auto 1fr 5rem;
    grid-template: ". . . . setting" var(--burger-size) "title title title title title" min-content "wave wave wave wave wave" min-content "prompt prompt prompt prompt prompt" 1fr "play play rec cancel cancel" min-content/var(--burger-size) 1fr auto 1fr var(--burger-size);
    height: 100%;
    min-height: 100vh;
    min-height: var(--bodyHeight);
    padding: var(--padding);
    border-bottom: solid 1px #262633;
    border-bottom: solid 1px var(--borderColor)
}

@media(min-width:40em) {
    .recorder {
        grid-template: ". title title title ." 20% "wave wave wave wave wave" min-content "prompt prompt prompt prompt prompt" 1fr ". play rec cancel setting" min-content/7rem 1fr auto 1fr 7rem;
        grid-template: ". title title title ." 20% "wave wave wave wave wave" min-content "prompt prompt prompt prompt prompt" 1fr ". play rec cancel setting" min-content/calc(var(--burger-size) + 2rem) 1fr auto 1fr calc(var(--burger-size) + 2rem)
    }
}

.recorder .links {
    grid-area: menu;
    justify-self: end
}

.recorder .links>a {
    padding: 0 1rem;
    color: #5c5c64;
    font-weight: 300;
    font-size: .9rem
}

.recorder .title {
    grid-area: title;
    align-self: center;
    justify-self: center
}

.recorder .waveform {
    grid-area: wave
}

.recorder .rec {
    grid-area: rec;
    justify-self: center
}

.recorder .play {
    grid-area: play;
    align-self: center;
    justify-self: end
}

.recorder .cancel {
    grid-area: cancel;
    align-self: center;
    justify-self: start
}

.recorder .setting {
    grid-area: setting;
    align-self: center;
    justify-self: center
}

@media(min-width:40em) {
    .recorder .setting {
        align-self: end
    }
}

.recorder .prompt {
    grid-area: prompt;
    align-self: center;
    justify-self: center;
    color: #d8d8e2;
    color: var(--secondaryColor);
    font-weight: 300;
    font-size: calc(1rem + .5vw);
    letter-spacing: .05rem
}

.recorder .timer {
    color: #eee;
    color: var(--mainColor);
    font-weight: 100;
    font-size: 2rem
}

#app {
    display: grid;
    justify-items: end;
    width: 100%;
    height: 100vh;
    height: var(--bodyHeight);
    max-height: 100vh;
    overflow: hidden
}

#app>.app-menu-burger {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 10;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 5rem;
    width: var(--burger-size);
    height: 5rem;
    height: var(--burger-size);
    padding: 0;
    background-color: inherit;
    border-right: none
}

#app>nav.bar {
    position: absolute;
    top: 0;
    bottom: 0;
    left: -100%;
    z-index: 5;
    display: grid;
    grid-template-rows: 5rem 1fr;
    width: 100%;
    width: var(--nav-width);
    height: 100%;
    background-color: #17171e;
    background-color: var(--mainBgColor);
    transition: left .1s
}

@media(min-width:40em) {
    #app>nav.bar {
        left: -100%;
        left: calc(-1 * var(--nav-width));
        grid-gap: .5rem;
        grid-template-rows: 1fr min-content;
        padding-top: 100%;
        padding-top: var(--nav-width);
        background-color: #1c1c26;
        background-color: var(--navColor);
        border-right: solid 1px #262633;
        border-right: solid 1px var(--borderColor)
    }
}

#app>main {
    width: 100%;
    overflow-y: auto
}

@media(min-width:40em) {
    #app>main {
        transition: width .1s
    }
}

#app.with-menu>nav.bar {
    left: 0
}

@media(min-width:40em) {
    #app.with-menu>main {
        width: 0%;
        width: calc(100% - var(--nav-width))
    }
}

#app>nav.bar>.tools,
#app>nav.bar>.help {
    display: grid;
    grid-auto-rows: min-content;
    user-select: none
}

#app>nav.bar>.tools>a,
#app>nav.bar>.help>a,
#app>nav.bar>.tools>button,
#app>nav.bar>.help>button {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 1rem;
    text-align: center;
    transition: color .2s ease-in-out 0s;
    border-radius: 0;
    overflow: hidden
}

@media(min-width:40em) {
    #app>nav.bar>.tools>a,
    #app>nav.bar>.help>a,
    #app>nav.bar>.tools>button,
    #app>nav.bar>.help>button {
        padding: 1rem .25rem;
        color: #eaeafa80;
        font-weight: 300;
        font-size: .8rem;
        line-height: 1rem;
        border: none;
        border-right: solid 2px transparent
    }
}

#app>nav.bar>.tools>a:hover,
#app>nav.bar>.help>a:hover,
#app>nav.bar>.tools>button:hover,
#app>nav.bar>.help>button:hover {
    color: #eee;
    color: var(--mainColor)
}

#app>nav.bar>.tools>a.router-link-exact-active,
#app>nav.bar>.help>a.router-link-exact-active,
#app>nav.bar>.tools>button.router-link-exact-active,
#app>nav.bar>.help>button.router-link-exact-active {
    color: #eaeafa;
    border: solid 1px #665dc3;
    border: solid 1px var(--purpleColor)
}

@media(min-width:40em) {
    #app>nav.bar>.tools>a.router-link-exact-active,
    #app>nav.bar>.help>a.router-link-exact-active,
    #app>nav.bar>.tools>button.router-link-exact-active,
    #app>nav.bar>.help>button.router-link-exact-active {
        background-color: #17171e;
        background-color: var(--mainBgColor);
        border: none;
        border-right: solid 2px #665dc3;
        border-right: solid 2px var(--purpleColor)
    }
}

#app>nav.bar>.tools>a svg,
#app>nav.bar>.help>a svg,
#app>nav.bar>.tools>button svg,
#app>nav.bar>.help>button svg {
    margin-bottom: .3rem
}

#app>nav.bar>.tools {
    grid-auto-rows: minmax(auto, 9rem);
    grid-gap: 1rem;
    grid-template-columns: 1fr 1fr;
    padding: 1rem;
    overflow-x: hidden;
    overflow-y: auto
}

@media(min-width:40em) {
    #app>nav.bar>.tools {
        grid-auto-rows: min-content;
        grid-gap: 0;
        grid-template-columns: 1fr;
        padding: 0
    }
}

#app>nav.bar>.tools>a {
    background-color: #1c1c26;
    background-color: var(--navColor)
}

#app>nav.bar>.help {
    grid-row: 1;
    grid-template-columns: 1fr 1fr;
    align-self: center;
    justify-self: end
}

@media(min-width:40em) {
    #app>nav.bar>.help {
        grid-row: -1;
        grid-template-columns: inherit;
        align-self: inherit;
        justify-self: inherit
    }
}

#app>nav.bar>.help .t {
    display: none
}

@media(min-width:40em) {
    #app>nav.bar>.help .t {
        display: inherit
    }
}

.locales {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 11;
    display: grid;
    grid-gap: 0;
    grid-template: ". close" 5rem "list list" auto/auto min-content;
    grid-template: ". close" var(--burger-size) "list list" auto/auto min-content;
    height: 100%;
    background-color: #17171e;
    background-color: var(--mainBgColor);
    transition: left .1s
}

@media(min-width:40em) {
    .locales {
        z-index: 9
    }
}

.locales .close {
    display: flex;
    grid-area: close;
    justify-content: center;
    justify-self: end;
    width: 5rem;
    width: var(--burger-size)
}

.locales .locale-list {
    display: grid;
    grid-area: list;
    grid-gap: .5rem;
    grid-template-columns: 1fr 1fr;
    overflow-y: auto;
    border-top: solid 1px #262633;
    border-top: solid 1px var(--borderColor)
}

@media(min-width:40em) {
    .locales .locale-list {
        grid-auto-rows: minmax(5rem, 10rem);
        grid-gap: .5rem 5rem;
        grid-template-columns: repeat(4, minmax(5rem, 10rem));
        align-content: start;
        justify-content: center;
        border-top: none
    }
}

.locales .locale-list>a {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-transform: capitalize
}

@media(min-width:40em) {
    .with-menu .locales {
        left: 100%;
        left: var(--nav-width)
    }
}

*,
*:after,
*:before {
    box-sizing: border-box
}

html {
    font-family: Source Sans Pro, sans-serif
}

body {
    width: 100%;
    height: 100vh;
    height: var(--bodyHeight);
    overflow: hidden;
    color: #eee;
    color: var(--mainColor);
    line-height: 1.5;
    background-color: #17171e;
    background-color: var(--mainBgColor)
}

h1,
h2,
h3 {
    margin: .5rem 0
}

h1 {
    font-size: calc(2rem + 1vw)
}

h2 {
    font-weight: 500;
    font-size: calc(1.3rem + 1vw)
}

p,
div.p,
h3 {
    margin: 1em 0;
    color: #d8d8e2;
    color: var(--secondaryColor);
    font-weight: 300;
    font-size: calc(1rem + .5vw);
    letter-spacing: .05rem
}

a {
    color: #eee;
    color: var(--mainColor);
    text-decoration: none;
    cursor: pointer
}

a:hover,
a:focus {
    color: #d8d8e2;
    color: var(--secondaryColor)
}

canvas {
    display: block
}

hr {
    height: 1px;
    margin: 1rem 0;
    background: #262633;
    background: var(--borderColor);
    border: none
}

img {
    user-select: none
}

::selection {
    background: rgba(102, 93, 195, .8);
    background: rgb(var(--purpleColorRGB)/80%)
}